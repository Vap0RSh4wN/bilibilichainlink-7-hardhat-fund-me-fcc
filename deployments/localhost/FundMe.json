{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realpricefeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3e06100772b2f1cf4d7c5ef6ba6509d66e2628796adcfde50686c57435141b17",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "926964",
    "logsBloom": "0x
    "blockHash": "0x7d3ee2832e1c55e826778caf4550c491c5cf45818c6f8b9c7d95168d02ac03c6",
    "transactionHash": "0x3e06100772b2f1cf4d7c5ef6ba6509d66e2628796adcfde50686c57435141b17",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "926964",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "6fff5177f62b985ce939b1e23a4629df",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realpricefeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;//\\u56e0\\u4e3a\\u8981\\u7528msg.value\\u8c03\\u7528\\u5176\\u4e2d\\u51fd\\u6570\\uff0c\\u6240\\u4ee5\\u76f4\\u63a5for uint256\\r\\n\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    address[] public funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    //\\u56e0\\u4e3aconstant\\u5fc5\\u987b\\u5728\\u5b9a\\u4e49\\u65f6\\u5c31\\u521d\\u59cb\\u5316\\uff0c\\u4f46\\u662fimmutable\\u53ef\\u4ee5\\u5728\\u6784\\u9020\\u51fd\\u6570\\u91cc\\u521d\\u59cb\\u5316\\u3002\\r\\n    address public /* immutable */ owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    uint256 public realpricefeed;\\r\\n    \\r\\n    AggregatorV3Interface public priceFeed;//\\u8fde\\u63a5\\u90a3\\u4e2a\\u5408\\u7ea6\\u5bf9\\u8c61\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);//\\u4e2a\\u4eba\\u7406\\u89e3\\u662fAggregatorV3Interface\\u5408\\u7ea6\\u7684\\u6784\\u9020\\u51fd\\u6570\\u4ee5priceFeedAddress\\u4e3a\\u53c2\\u6570\\r\\n        \\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    function fund() public payable {\\r\\n        realpricefeed = msg.value.getConversionRate(priceFeed);\\r\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n        funders.push(msg.sender);\\r\\n    }\\r\\n    \\r\\n    // function getVersion() public view returns (uint256){\\r\\n    //     // ETH/USD price feed address of Goerli Network.\\r\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n    //     return priceFeed.version();\\r\\n    // }\\r\\n    \\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n    // Explainer from: https://solidity-by-example.org/fallback/\\r\\n    // Ether is sent to contract\\r\\n    //      is msg.data empty?\\r\\n    //          /   \\\\ \\r\\n    //         yes  no\\r\\n    //         /     \\\\\\r\\n    //    receive()?  fallback() \\r\\n    //     /   \\\\ \\r\\n    //   yes   no\\r\\n    //  /        \\\\\\r\\n    //receive()  fallback()\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n// Concepts we didn't cover yet (will cover in later sections)\\r\\n// 1. Enum\\r\\n// 2. Events\\r\\n// 3. Try / Catch\\r\\n// 4. Function Selector\\r\\n// 5. abi.encode / decode\\r\\n// 6. Hash with keccak256\\r\\n// 7. Yul / Assembly\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x94e6b81388dfdbaa7deaffaeaf747e4dc4fe08c98b98c9fcc30e91d64331ca82\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Goerli ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e //chainlink\\u7f51\\u7ad9\\u4e0arinkeby\\u7f51\\u7edc\\u7684ETH/USD\\u5408\\u7ea6\\r\\n        // ); //priceFeed\\u76f8\\u5f53\\u4e8e\\u90a3\\u4e2a\\u5408\\u7ea6\\u5bf9\\u8c61\\u4e86\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed); //\\u51fd\\u6570\\u5728\\u4e0a\\u9762\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x11c48eec83516e36e0c0802558e9cc3e6c111260e003d4a323d2646f0d618862\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162001056380380620010568339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610efa806200015c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a146101425780638da5cb5b1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b806313a56470146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610354565b6040516100ba91906107e8565b60405180910390f35b3480156100cf57600080fd5b506100d861035a565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610866565b61059c565b60405161010e91906107e8565b60405180910390f35b34801561012357600080fd5b5061012c6105b4565b60405161013991906107e8565b60405180910390f35b34801561014e57600080fd5b506101576105c1565b60405161016491906108f2565b60405180910390f35b34801561017957600080fd5b506101826105e7565b60405161018f919061091c565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610963565b61060d565b6040516101d6919061091c565b60405180910390f35b610214600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b6003819055506802b5e3af16b1880000610259600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b101561029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906109ed565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e89190610a3c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561048c5760006001828154811061040757610406610a92565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048490610ac1565b9150506103e4565b50600067ffffffffffffffff8111156104a8576104a7610b0a565b5b6040519080825280602002602001820160405280156104d65781602001602082028036833780820191505090505b50600190805190602001906104ec929190610728565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051390610b6a565b60006040518083038185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5050905080610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610bcb565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065883610688565b90506000670de0b6b3a764000085836106719190610beb565b61067b9190610c74565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610d32565b5050509150506402540be400816107209190610dad565b915050919050565b8280548282559060005260206000209081019282156107a1579160200282015b828111156107a05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610748565b5b5090506107ae91906107b2565b5090565b5b808211156107cb5760008160009055506001016107b3565b5090565b6000819050919050565b6107e2816107cf565b82525050565b60006020820190506107fd60008301846107d9565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083382610808565b9050919050565b61084381610828565b811461084e57600080fd5b50565b6000813590506108608161083a565b92915050565b60006020828403121561087c5761087b610803565b5b600061088a84828501610851565b91505092915050565b6000819050919050565b60006108b86108b36108ae84610808565b610893565b610808565b9050919050565b60006108ca8261089d565b9050919050565b60006108dc826108bf565b9050919050565b6108ec816108d1565b82525050565b600060208201905061090760008301846108e3565b92915050565b61091681610828565b82525050565b6000602082019050610931600083018461090d565b92915050565b610940816107cf565b811461094b57600080fd5b50565b60008135905061095d81610937565b92915050565b60006020828403121561097957610978610803565b5b60006109878482850161094e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109d7601b83610990565b91506109e2826109a1565b602082019050919050565b60006020820190508181036000830152610a06816109ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a47826107cf565b9150610a52836107cf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8757610a86610a0d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610acc826107cf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aff57610afe610a0d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b54600083610b39565b9150610b5f82610b44565b600082019050919050565b6000610b7582610b47565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bb5600b83610990565b9150610bc082610b7f565b602082019050919050565b60006020820190508181036000830152610be481610ba8565b9050919050565b6000610bf6826107cf565b9150610c01836107cf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3a57610c39610a0d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7f826107cf565b9150610c8a836107cf565b925082610c9a57610c99610c45565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cc481610ca5565b8114610ccf57600080fd5b50565b600081519050610ce181610cbb565b92915050565b6000819050919050565b610cfa81610ce7565b8114610d0557600080fd5b50565b600081519050610d1781610cf1565b92915050565b600081519050610d2c81610937565b92915050565b600080600080600060a08688031215610d4e57610d4d610803565b5b6000610d5c88828901610cd2565b9550506020610d6d88828901610d08565b9450506040610d7e88828901610d1d565b9350506060610d8f88828901610d1d565b9250506080610da088828901610cd2565b9150509295509295909350565b6000610db882610ce7565b9150610dc383610ce7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e0257610e01610a0d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3f57610e3e610a0d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7c57610e7b610a0d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb957610eb8610a0d565b5b82820290509291505056fea2646970667358221220a9be2dcc9077a48f294e19dfca5091e95ed8792acc65c84a56b2f36e461bf36664736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a146101425780638da5cb5b1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b806313a56470146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610354565b6040516100ba91906107e8565b60405180910390f35b3480156100cf57600080fd5b506100d861035a565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610866565b61059c565b60405161010e91906107e8565b60405180910390f35b34801561012357600080fd5b5061012c6105b4565b60405161013991906107e8565b60405180910390f35b34801561014e57600080fd5b506101576105c1565b60405161016491906108f2565b60405180910390f35b34801561017957600080fd5b506101826105e7565b60405161018f919061091c565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610963565b61060d565b6040516101d6919061091c565b60405180910390f35b610214600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b6003819055506802b5e3af16b1880000610259600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064c90919063ffffffff16565b101561029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906109ed565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e89190610a3c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561048c5760006001828154811061040757610406610a92565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048490610ac1565b9150506103e4565b50600067ffffffffffffffff8111156104a8576104a7610b0a565b5b6040519080825280602002602001820160405280156104d65781602001602082028036833780820191505090505b50600190805190602001906104ec929190610728565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051390610b6a565b60006040518083038185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5050905080610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090610bcb565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065883610688565b90506000670de0b6b3a764000085836106719190610beb565b61067b9190610c74565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610d32565b5050509150506402540be400816107209190610dad565b915050919050565b8280548282559060005260206000209081019282156107a1579160200282015b828111156107a05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610748565b5b5090506107ae91906107b2565b5090565b5b808211156107cb5760008160009055506001016107b3565b5090565b6000819050919050565b6107e2816107cf565b82525050565b60006020820190506107fd60008301846107d9565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083382610808565b9050919050565b61084381610828565b811461084e57600080fd5b50565b6000813590506108608161083a565b92915050565b60006020828403121561087c5761087b610803565b5b600061088a84828501610851565b91505092915050565b6000819050919050565b60006108b86108b36108ae84610808565b610893565b610808565b9050919050565b60006108ca8261089d565b9050919050565b60006108dc826108bf565b9050919050565b6108ec816108d1565b82525050565b600060208201905061090760008301846108e3565b92915050565b61091681610828565b82525050565b6000602082019050610931600083018461090d565b92915050565b610940816107cf565b811461094b57600080fd5b50565b60008135905061095d81610937565b92915050565b60006020828403121561097957610978610803565b5b60006109878482850161094e565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109d7601b83610990565b91506109e2826109a1565b602082019050919050565b60006020820190508181036000830152610a06816109ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a47826107cf565b9150610a52836107cf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8757610a86610a0d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610acc826107cf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aff57610afe610a0d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b54600083610b39565b9150610b5f82610b44565b600082019050919050565b6000610b7582610b47565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bb5600b83610990565b9150610bc082610b7f565b602082019050919050565b60006020820190508181036000830152610be481610ba8565b9050919050565b6000610bf6826107cf565b9150610c01836107cf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3a57610c39610a0d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c7f826107cf565b9150610c8a836107cf565b925082610c9a57610c99610c45565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cc481610ca5565b8114610ccf57600080fd5b50565b600081519050610ce181610cbb565b92915050565b6000819050919050565b610cfa81610ce7565b8114610d0557600080fd5b50565b600081519050610d1781610cf1565b92915050565b600081519050610d2c81610937565b92915050565b600080600080600060a08688031215610d4e57610d4d610803565b5b6000610d5c88828901610cd2565b9550506020610d6d88828901610d08565b9450506040610d7e88828901610d1d565b9350506060610d8f88828901610d1d565b9250506080610da088828901610cd2565b9150509295509295909350565b6000610db882610ce7565b9150610dc383610ce7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e0257610e01610a0d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3f57610e3e610a0d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7c57610e7b610a0d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb957610eb8610a0d565b5b82820290509291505056fea2646970667358221220a9be2dcc9077a48f294e19dfca5091e95ed8792acc65c84a56b2f36e461bf36664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "realpricefeed",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}